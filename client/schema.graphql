schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Aggregate {
  c: Float
  create_time: AWSTimestamp
  e: AWSTimestamp
  ev_pair: String
  h: Float
  l: Float
  o: Float
  s: AWSTimestamp
  v: Float
  vw: Float
  z: Int
}

type AggregateList {
  items: [Aggregate]
}

type Channel {
  data: AWSJSON!
  name: String!
}

type Mutation {
  publish2channel(data: AWSJSON!, name: String!): Channel
}

type Query {
  getAggregatesPerSecondCrypto(ev_pair: String!, limit: Int): AggregateList
  getChannel: Channel
}

type Subscription {
  subscribe2channel(name: String!): Channel @aws_subscribe(mutations : ["publish2channel"])
}
